{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.85.62628",
      "templateHash": "5249765687434201763"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "allowedValues": [
        "japaneast",
        "japanwest"
      ],
      "metadata": {
        "description": "Location for the VM, only certain regions support zones during preview."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "contoso.local",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      }
    },
    "resourceNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Resources Name Prefix"
      },
      "maxLength": 6
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the VM for the controller"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/kzk839/RecoveryServices/master/",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules that the script is dependent"
      }
    },
    "artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "imageSKU": "2019-Datacenter",
    "asrImageSKU": "2016-Datacenter",
    "virtualNetworkName": "[format('{0}-VNET', parameters('resourceNamePrefix'))]",
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "vmSubnetName": "Subnet",
    "vmSubnet": "10.0.0.0/24",
    "vmSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('vmSubnetName'))]",
    "bastionSubnetName": "AzureBastionSubnet",
    "bastionSubnet": "10.0.1.0/24",
    "bastionSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('bastionSubnetName'))]",
    "publicIpName": "[format('{0}-bastion-ip', parameters('resourceNamePrefix'))]",
    "bastionHostName": "[format('{0}-bastion', parameters('resourceNamePrefix'))]",
    "storageAccountName": "[format('{0}{1}', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id))]",
    "vmName": "[format('{0}-DC', parameters('resourceNamePrefix'))]",
    "nicName": "[format('{0}-DC-Nic', parameters('resourceNamePrefix'))]",
    "ipAddressPDC": "10.0.0.4",
    "vmName2": "[format('{0}-RecVM1', parameters('resourceNamePrefix'))]",
    "nicName2": "[format('{0}-RecVM1-Nic', parameters('resourceNamePrefix'))]",
    "ipAddressVm2": "10.0.0.5",
    "vmSize2": "Standard_A2_v2",
    "vmName3": "[format('{0}-BKSvr', parameters('resourceNamePrefix'))]",
    "nicName3": "[format('{0}-BKSvr-Nic', parameters('resourceNamePrefix'))]",
    "ipAddressVm3": "10.0.0.6",
    "vmSize3": "Standard_D2s_v3",
    "vmName4": "[format('{0}-CSPSSvr', parameters('resourceNamePrefix'))]",
    "nicName4": "[format('{0}-CSPSSvr-Nic', parameters('resourceNamePrefix'))]",
    "ipAddressVm4": "10.0.0.7",
    "vmSize4": "Standard_D2s_v3",
    "vmName5": "[format('{0}-Migrated', parameters('resourceNamePrefix'))]",
    "nicName5": "[format('{0}-Migrated', parameters('resourceNamePrefix'))]",
    "ipAddressVm5": "10.0.0.8",
    "vmSize5": "Standard_A2_v2"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2022-07-01",
      "name": "[variables('bastionHostName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[variables('bastionSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ipAddressPDC')]",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 64,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/runCommands",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', variables('vmName'), 'RunCommand')]",
      "location": "[parameters('location')]",
      "properties": {
        "asyncExecution": false,
        "source": {
          "script": "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\WindowsAzureGuestAgent\" -Name DependOnService -Type MultiString -Value DNS"
        },
        "timeoutInSeconds": 30
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', variables('vmName'), 'CreateAdForest')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.83",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[uri(parameters('_artifactsLocation'), 'DSC/CreateADPDC.ps1.zip')]",
            "script": "CreateADPDC.ps1",
            "function": "CreateADPDC"
          },
          "configurationArguments": {
            "domainName": "[parameters('domainName')]"
          }
        },
        "protectedSettings": {
          "configurationUrlSasToken": "[parameters('artifactsLocationSasToken')]",
          "configurationArguments": {
            "adminCreds": {
              "userName": "[parameters('adminUsername')]",
              "password": "[parameters('adminPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/runCommands', variables('vmName'), 'RunCommand')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "[variables('nicName2')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ipAddressVm2')]",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmName2')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize2')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 128,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName2'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName2'))]",
        "[resourceId('Microsoft.Resources/deployments', 'UpdateVNetDNS1')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', variables('vmName2'), 'joindomain1')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "name": "[parameters('domainName')]",
          "user": "[format('{0}\\{1}', parameters('domainName'), parameters('adminUsername'))]",
          "restart": true,
          "options": "3"
        },
        "protectedSettings": {
          "Password": "[parameters('adminPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName2'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "[variables('nicName3')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ipAddressVm3')]",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmName3')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize3')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName3')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 128,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName3'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName3'))]",
        "[resourceId('Microsoft.Resources/deployments', 'UpdateVNetDNS1')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', variables('vmName3'), 'joindomain2')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "name": "[parameters('domainName')]",
          "user": "[format('{0}\\{1}', parameters('domainName'), parameters('adminUsername'))]",
          "restart": true,
          "options": "3"
        },
        "protectedSettings": {
          "Password": "[parameters('adminPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName3'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "[variables('nicName4')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ipAddressVm4')]",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmName4')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize4')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName4')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('asrImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName4'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName4'))]",
        "[resourceId('Microsoft.Resources/deployments', 'UpdateVNetDNS1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "[variables('nicName5')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('ipAddressVm5')]",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[variables('vmName5')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize5')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName5')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('asrImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName5'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName5'))]",
        "[resourceId('Microsoft.Resources/deployments', 'UpdateVNetDNS1')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "vNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[variables('vmSubnetName')]"
          },
          "subnetRange": {
            "value": "[variables('vmSubnet')]"
          },
          "bastionSubnetName": {
            "value": "[variables('bastionSubnetName')]"
          },
          "bastionSubnetRange": {
            "value": "[variables('bastionSubnet')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "11142327536040674313"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "Description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "Description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "Description": "The name of the subnet created in the new VNET"
              }
            },
            "subnetRange": {
              "type": "string",
              "metadata": {
                "Description": "The address range of the subnet created in the new VNET"
              }
            },
            "DNSServerAddress": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "Description": "The DNS address(es) of the DNS Server(s) used by the VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "bastionSubnetName": {
              "type": "string"
            },
            "bastionSubnetRange": {
              "type": "string"
            }
          },
          "variables": {
            "dhcpOptions": {
              "dnsServers": "[parameters('DNSServerAddress')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "dhcpOptions": "[if(empty(parameters('DNSServerAddress')), json('null'), variables('dhcpOptions'))]",
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetRange')]"
                    }
                  },
                  {
                    "name": "[parameters('bastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('bastionSubnetRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "UpdateVNetDNS1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[variables('vmSubnetName')]"
          },
          "subnetRange": {
            "value": "[variables('vmSubnet')]"
          },
          "bastionSubnetName": {
            "value": "[variables('bastionSubnetName')]"
          },
          "bastionSubnetRange": {
            "value": "[variables('bastionSubnet')]"
          },
          "DNSServerAddress": {
            "value": [
              "[variables('ipAddressPDC')]"
            ]
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "11142327536040674313"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "Description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "Description": "The address range of the new VNET in CIDR format"
              }
            },
            "subnetName": {
              "type": "string",
              "metadata": {
                "Description": "The name of the subnet created in the new VNET"
              }
            },
            "subnetRange": {
              "type": "string",
              "metadata": {
                "Description": "The address range of the subnet created in the new VNET"
              }
            },
            "DNSServerAddress": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "Description": "The DNS address(es) of the DNS Server(s) used by the VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "bastionSubnetName": {
              "type": "string"
            },
            "bastionSubnetRange": {
              "type": "string"
            }
          },
          "variables": {
            "dhcpOptions": {
              "dnsServers": "[parameters('DNSServerAddress')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "dhcpOptions": "[if(empty(parameters('DNSServerAddress')), json('null'), variables('dhcpOptions'))]",
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetRange')]"
                    }
                  },
                  {
                    "name": "[parameters('bastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('bastionSubnetRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), 'CreateAdForest')]"
      ]
    }
  ]
}